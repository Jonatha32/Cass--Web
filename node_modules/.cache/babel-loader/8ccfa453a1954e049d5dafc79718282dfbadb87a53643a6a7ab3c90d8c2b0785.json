{"ast":null,"code":"import { collection, addDoc, getDocs, deleteDoc, query, where, doc } from 'firebase/firestore';\nimport { db } from './firebase';\nexport const favoritesService = {\n  // Agregar a favoritos\n  async addToFavorites(userId, articleId) {\n    try {\n      await addDoc(collection(db, 'favorites'), {\n        userId,\n        articleId,\n        createdAt: new Date()\n      });\n      return true;\n    } catch (error) {\n      console.error('Error adding to favorites:', error);\n      throw error;\n    }\n  },\n  // Remover de favoritos\n  async removeFromFavorites(userId, articleId) {\n    try {\n      const q = query(collection(db, 'favorites'), where('userId', '==', userId), where('articleId', '==', articleId));\n      const querySnapshot = await getDocs(q);\n      for (const docSnapshot of querySnapshot.docs) {\n        await deleteDoc(doc(db, 'favorites', docSnapshot.id));\n      }\n      return true;\n    } catch (error) {\n      console.error('Error removing from favorites:', error);\n      throw error;\n    }\n  },\n  // Toggle favorito\n  async toggleFavorite(userId, articleId) {\n    try {\n      const isFavorite = await this.isFavorite(userId, articleId);\n      if (isFavorite) {\n        await this.removeFromFavorites(userId, articleId);\n        return false;\n      } else {\n        await this.addToFavorites(userId, articleId);\n        return true;\n      }\n    } catch (error) {\n      console.error('Error toggling favorite:', error);\n      throw error;\n    }\n  },\n  // Verificar si es favorito\n  async isFavorite(userId, articleId) {\n    try {\n      const q = query(collection(db, 'favorites'), where('userId', '==', userId), where('articleId', '==', articleId));\n      const querySnapshot = await getDocs(q);\n      return !querySnapshot.empty;\n    } catch (error) {\n      console.error('Error checking favorite:', error);\n      return false;\n    }\n  },\n  // Obtener favoritos del usuario\n  async getUserFavorites(userId) {\n    try {\n      const q = query(collection(db, 'favorites'), where('userId', '==', userId));\n      const querySnapshot = await getDocs(q);\n      return querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n    } catch (error) {\n      console.error('Error getting user favorites:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["collection","addDoc","getDocs","deleteDoc","query","where","doc","db","favoritesService","addToFavorites","userId","articleId","createdAt","Date","error","console","removeFromFavorites","q","querySnapshot","docSnapshot","docs","id","toggleFavorite","isFavorite","empty","getUserFavorites","map","data"],"sources":["C:/Users/Usuario/Desktop/Carpeta de Pruebas - Holberton/casse-web/src/services/favoritesService.js"],"sourcesContent":["import { \n  collection, \n  addDoc, \n  getDocs, \n  deleteDoc, \n  query, \n  where,\n  doc\n} from 'firebase/firestore';\nimport { db } from './firebase';\n\nexport const favoritesService = {\n  // Agregar a favoritos\n  async addToFavorites(userId, articleId) {\n    try {\n      await addDoc(collection(db, 'favorites'), {\n        userId,\n        articleId,\n        createdAt: new Date()\n      });\n      return true;\n    } catch (error) {\n      console.error('Error adding to favorites:', error);\n      throw error;\n    }\n  },\n\n  // Remover de favoritos\n  async removeFromFavorites(userId, articleId) {\n    try {\n      const q = query(\n        collection(db, 'favorites'),\n        where('userId', '==', userId),\n        where('articleId', '==', articleId)\n      );\n      \n      const querySnapshot = await getDocs(q);\n      \n      for (const docSnapshot of querySnapshot.docs) {\n        await deleteDoc(doc(db, 'favorites', docSnapshot.id));\n      }\n      \n      return true;\n    } catch (error) {\n      console.error('Error removing from favorites:', error);\n      throw error;\n    }\n  },\n\n  // Toggle favorito\n  async toggleFavorite(userId, articleId) {\n    try {\n      const isFavorite = await this.isFavorite(userId, articleId);\n      \n      if (isFavorite) {\n        await this.removeFromFavorites(userId, articleId);\n        return false;\n      } else {\n        await this.addToFavorites(userId, articleId);\n        return true;\n      }\n    } catch (error) {\n      console.error('Error toggling favorite:', error);\n      throw error;\n    }\n  },\n\n  // Verificar si es favorito\n  async isFavorite(userId, articleId) {\n    try {\n      const q = query(\n        collection(db, 'favorites'),\n        where('userId', '==', userId),\n        where('articleId', '==', articleId)\n      );\n      \n      const querySnapshot = await getDocs(q);\n      return !querySnapshot.empty;\n    } catch (error) {\n      console.error('Error checking favorite:', error);\n      return false;\n    }\n  },\n\n  // Obtener favoritos del usuario\n  async getUserFavorites(userId) {\n    try {\n      const q = query(\n        collection(db, 'favorites'),\n        where('userId', '==', userId)\n      );\n      \n      const querySnapshot = await getDocs(q);\n      return querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n    } catch (error) {\n      console.error('Error getting user favorites:', error);\n      throw error;\n    }\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
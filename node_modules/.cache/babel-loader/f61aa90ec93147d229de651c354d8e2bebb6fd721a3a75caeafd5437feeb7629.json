{"ast":null,"code":"import _objectSpread from\"c:/casse-web/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{collection,addDoc,getDocs,deleteDoc,query,where,doc}from'firebase/firestore';import{db}from'./firebase';export const favoritesService={// Agregar a favoritos\nasync addToFavorites(userId,articleId){try{await addDoc(collection(db,'favorites'),{userId,articleId,createdAt:new Date()});return true;}catch(error){console.error('Error adding to favorites:',error);throw error;}},// Remover de favoritos\nasync removeFromFavorites(userId,articleId){try{const q=query(collection(db,'favorites'),where('userId','==',userId),where('articleId','==',articleId));const querySnapshot=await getDocs(q);for(const docSnapshot of querySnapshot.docs){await deleteDoc(doc(db,'favorites',docSnapshot.id));}return true;}catch(error){console.error('Error removing from favorites:',error);throw error;}},// Toggle favorito\nasync toggleFavorite(userId,articleId){try{const isFavorite=await this.isFavorite(userId,articleId);if(isFavorite){await this.removeFromFavorites(userId,articleId);return false;}else{await this.addToFavorites(userId,articleId);return true;}}catch(error){console.error('Error toggling favorite:',error);throw error;}},// Verificar si es favorito\nasync isFavorite(userId,articleId){try{const q=query(collection(db,'favorites'),where('userId','==',userId),where('articleId','==',articleId));const querySnapshot=await getDocs(q);return!querySnapshot.empty;}catch(error){console.error('Error checking favorite:',error);return false;}},// Obtener favoritos del usuario\nasync getUserFavorites(userId){try{const q=query(collection(db,'favorites'),where('userId','==',userId));const querySnapshot=await getDocs(q);return querySnapshot.docs.map(doc=>_objectSpread({id:doc.id},doc.data()));}catch(error){console.error('Error getting user favorites:',error);throw error;}}};","map":{"version":3,"names":["collection","addDoc","getDocs","deleteDoc","query","where","doc","db","favoritesService","addToFavorites","userId","articleId","createdAt","Date","error","console","removeFromFavorites","q","querySnapshot","docSnapshot","docs","id","toggleFavorite","isFavorite","empty","getUserFavorites","map","_objectSpread","data"],"sources":["c:/casse-web/src/services/favoritesService.js"],"sourcesContent":["import { \n  collection, \n  addDoc, \n  getDocs, \n  deleteDoc, \n  query, \n  where,\n  doc\n} from 'firebase/firestore';\nimport { db } from './firebase';\n\nexport const favoritesService = {\n  // Agregar a favoritos\n  async addToFavorites(userId, articleId) {\n    try {\n      await addDoc(collection(db, 'favorites'), {\n        userId,\n        articleId,\n        createdAt: new Date()\n      });\n      return true;\n    } catch (error) {\n      console.error('Error adding to favorites:', error);\n      throw error;\n    }\n  },\n\n  // Remover de favoritos\n  async removeFromFavorites(userId, articleId) {\n    try {\n      const q = query(\n        collection(db, 'favorites'),\n        where('userId', '==', userId),\n        where('articleId', '==', articleId)\n      );\n      \n      const querySnapshot = await getDocs(q);\n      \n      for (const docSnapshot of querySnapshot.docs) {\n        await deleteDoc(doc(db, 'favorites', docSnapshot.id));\n      }\n      \n      return true;\n    } catch (error) {\n      console.error('Error removing from favorites:', error);\n      throw error;\n    }\n  },\n\n  // Toggle favorito\n  async toggleFavorite(userId, articleId) {\n    try {\n      const isFavorite = await this.isFavorite(userId, articleId);\n      \n      if (isFavorite) {\n        await this.removeFromFavorites(userId, articleId);\n        return false;\n      } else {\n        await this.addToFavorites(userId, articleId);\n        return true;\n      }\n    } catch (error) {\n      console.error('Error toggling favorite:', error);\n      throw error;\n    }\n  },\n\n  // Verificar si es favorito\n  async isFavorite(userId, articleId) {\n    try {\n      const q = query(\n        collection(db, 'favorites'),\n        where('userId', '==', userId),\n        where('articleId', '==', articleId)\n      );\n      \n      const querySnapshot = await getDocs(q);\n      return !querySnapshot.empty;\n    } catch (error) {\n      console.error('Error checking favorite:', error);\n      return false;\n    }\n  },\n\n  // Obtener favoritos del usuario\n  async getUserFavorites(userId) {\n    try {\n      const q = query(\n        collection(db, 'favorites'),\n        where('userId', '==', userId)\n      );\n      \n      const querySnapshot = await getDocs(q);\n      return querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n    } catch (error) {\n      console.error('Error getting user favorites:', error);\n      throw error;\n    }\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
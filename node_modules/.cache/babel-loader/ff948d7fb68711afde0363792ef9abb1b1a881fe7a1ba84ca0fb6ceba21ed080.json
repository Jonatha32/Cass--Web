{"ast":null,"code":"import { collection, addDoc, getDocs, doc, updateDoc, deleteDoc, query, orderBy, where, getDoc } from 'firebase/firestore';\nimport { ref, uploadBytes, getDownloadURL, deleteObject } from 'firebase/storage';\nimport { db, storage } from './firebase';\nexport const articlesService = {\n  // Crear artículo\n  async createArticle(articleData, images = []) {\n    try {\n      const imageUrls = [];\n\n      // Subir imágenes\n      for (const image of images) {\n        const imageRef = ref(storage, `articles/${Date.now()}_${image.name}`);\n        const snapshot = await uploadBytes(imageRef, image);\n        const url = await getDownloadURL(snapshot.ref);\n        imageUrls.push(url);\n      }\n      const docRef = await addDoc(collection(db, 'articulos'), {\n        ...articleData,\n        fotos: imageUrls,\n        createdAt: new Date(),\n        updatedAt: new Date()\n      });\n      return docRef.id;\n    } catch (error) {\n      console.error('Error creating article:', error);\n      throw error;\n    }\n  },\n  // Obtener todos los artículos\n  async getAllArticles() {\n    try {\n      const q = query(collection(db, 'articulos'), orderBy('createdAt', 'desc'));\n      const querySnapshot = await getDocs(q);\n      return querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        uuid: doc.id,\n        ...doc.data()\n      }));\n    } catch (error) {\n      console.error('Error getting articles:', error);\n      throw error;\n    }\n  },\n  // Obtener artículo por ID\n  async getArticleById(id) {\n    try {\n      const docRef = doc(db, 'articulos', id);\n      const docSnap = await getDoc(docRef);\n      if (docSnap.exists()) {\n        return {\n          id: docSnap.id,\n          uuid: docSnap.id,\n          ...docSnap.data()\n        };\n      }\n      return null;\n    } catch (error) {\n      console.error('Error getting article:', error);\n      throw error;\n    }\n  },\n  // Actualizar artículo\n  async updateArticle(id, articleData, newImages = [], removedImages = []) {\n    try {\n      // Eliminar imágenes removidas\n      for (const imageUrl of removedImages) {\n        try {\n          const imageRef = ref(storage, imageUrl);\n          await deleteObject(imageRef);\n        } catch (error) {\n          console.warn('Error deleting image:', error);\n        }\n      }\n\n      // Subir nuevas imágenes\n      const newImageUrls = [];\n      for (const image of newImages) {\n        const imageRef = ref(storage, `articles/${Date.now()}_${image.name}`);\n        const snapshot = await uploadBytes(imageRef, image);\n        const url = await getDownloadURL(snapshot.ref);\n        newImageUrls.push(url);\n      }\n      const docRef = doc(db, 'articulos', id);\n      await updateDoc(docRef, {\n        ...articleData,\n        fotos: [...(articleData.fotos || []), ...newImageUrls],\n        updatedAt: new Date()\n      });\n      return true;\n    } catch (error) {\n      console.error('Error updating article:', error);\n      throw error;\n    }\n  },\n  // Eliminar artículo\n  async deleteArticle(id) {\n    try {\n      // Obtener el artículo para eliminar sus imágenes\n      const article = await this.getArticleById(id);\n      if (article && article.fotos) {\n        // Eliminar imágenes del storage\n        for (const imageUrl of article.fotos) {\n          try {\n            const imageRef = ref(storage, imageUrl);\n            await deleteObject(imageRef);\n          } catch (error) {\n            console.warn('Error deleting image:', error);\n          }\n        }\n      }\n\n      // Eliminar documento\n      await deleteDoc(doc(db, 'articulos', id));\n      return true;\n    } catch (error) {\n      console.error('Error deleting article:', error);\n      throw error;\n    }\n  },\n  // Buscar artículos\n  async searchArticles(searchTerm) {\n    try {\n      const q = query(collection(db, 'articulos'), orderBy('createdAt', 'desc'));\n      const querySnapshot = await getDocs(q);\n      const articles = querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        uuid: doc.id,\n        ...doc.data()\n      }));\n\n      // Filtrar en el cliente\n      return articles.filter(article => {\n        var _article$titulo, _article$descripcion, _article$tags;\n        return ((_article$titulo = article.titulo) === null || _article$titulo === void 0 ? void 0 : _article$titulo.toLowerCase().includes(searchTerm.toLowerCase())) || ((_article$descripcion = article.descripcion) === null || _article$descripcion === void 0 ? void 0 : _article$descripcion.toLowerCase().includes(searchTerm.toLowerCase())) || ((_article$tags = article.tags) === null || _article$tags === void 0 ? void 0 : _article$tags.some(tag => tag.toLowerCase().includes(searchTerm.toLowerCase())));\n      });\n    } catch (error) {\n      console.error('Error searching articles:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["collection","addDoc","getDocs","doc","updateDoc","deleteDoc","query","orderBy","where","getDoc","ref","uploadBytes","getDownloadURL","deleteObject","db","storage","articlesService","createArticle","articleData","images","imageUrls","image","imageRef","Date","now","name","snapshot","url","push","docRef","fotos","createdAt","updatedAt","id","error","console","getAllArticles","q","querySnapshot","docs","map","uuid","data","getArticleById","docSnap","exists","updateArticle","newImages","removedImages","imageUrl","warn","newImageUrls","deleteArticle","article","searchArticles","searchTerm","articles","filter","_article$titulo","_article$descripcion","_article$tags","titulo","toLowerCase","includes","descripcion","tags","some","tag"],"sources":["C:/Users/Usuario/Desktop/Carpeta de Pruebas - Holberton/casse-web/src/services/articlesService.js"],"sourcesContent":["import { \n  collection, \n  addDoc, \n  getDocs, \n  doc, \n  updateDoc, \n  deleteDoc, \n  query, \n  orderBy, \n  where,\n  getDoc \n} from 'firebase/firestore';\nimport { ref, uploadBytes, getDownloadURL, deleteObject } from 'firebase/storage';\nimport { db, storage } from './firebase';\n\nexport const articlesService = {\n  // Crear artículo\n  async createArticle(articleData, images = []) {\n    try {\n      const imageUrls = [];\n      \n      // Subir imágenes\n      for (const image of images) {\n        const imageRef = ref(storage, `articles/${Date.now()}_${image.name}`);\n        const snapshot = await uploadBytes(imageRef, image);\n        const url = await getDownloadURL(snapshot.ref);\n        imageUrls.push(url);\n      }\n\n      const docRef = await addDoc(collection(db, 'articulos'), {\n        ...articleData,\n        fotos: imageUrls,\n        createdAt: new Date(),\n        updatedAt: new Date()\n      });\n\n      return docRef.id;\n    } catch (error) {\n      console.error('Error creating article:', error);\n      throw error;\n    }\n  },\n\n  // Obtener todos los artículos\n  async getAllArticles() {\n    try {\n      const q = query(collection(db, 'articulos'), orderBy('createdAt', 'desc'));\n      const querySnapshot = await getDocs(q);\n      return querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        uuid: doc.id,\n        ...doc.data()\n      }));\n    } catch (error) {\n      console.error('Error getting articles:', error);\n      throw error;\n    }\n  },\n\n  // Obtener artículo por ID\n  async getArticleById(id) {\n    try {\n      const docRef = doc(db, 'articulos', id);\n      const docSnap = await getDoc(docRef);\n      \n      if (docSnap.exists()) {\n        return {\n          id: docSnap.id,\n          uuid: docSnap.id,\n          ...docSnap.data()\n        };\n      }\n      return null;\n    } catch (error) {\n      console.error('Error getting article:', error);\n      throw error;\n    }\n  },\n\n  // Actualizar artículo\n  async updateArticle(id, articleData, newImages = [], removedImages = []) {\n    try {\n      // Eliminar imágenes removidas\n      for (const imageUrl of removedImages) {\n        try {\n          const imageRef = ref(storage, imageUrl);\n          await deleteObject(imageRef);\n        } catch (error) {\n          console.warn('Error deleting image:', error);\n        }\n      }\n\n      // Subir nuevas imágenes\n      const newImageUrls = [];\n      for (const image of newImages) {\n        const imageRef = ref(storage, `articles/${Date.now()}_${image.name}`);\n        const snapshot = await uploadBytes(imageRef, image);\n        const url = await getDownloadURL(snapshot.ref);\n        newImageUrls.push(url);\n      }\n\n      const docRef = doc(db, 'articulos', id);\n      await updateDoc(docRef, {\n        ...articleData,\n        fotos: [...(articleData.fotos || []), ...newImageUrls],\n        updatedAt: new Date()\n      });\n\n      return true;\n    } catch (error) {\n      console.error('Error updating article:', error);\n      throw error;\n    }\n  },\n\n  // Eliminar artículo\n  async deleteArticle(id) {\n    try {\n      // Obtener el artículo para eliminar sus imágenes\n      const article = await this.getArticleById(id);\n      \n      if (article && article.fotos) {\n        // Eliminar imágenes del storage\n        for (const imageUrl of article.fotos) {\n          try {\n            const imageRef = ref(storage, imageUrl);\n            await deleteObject(imageRef);\n          } catch (error) {\n            console.warn('Error deleting image:', error);\n          }\n        }\n      }\n\n      // Eliminar documento\n      await deleteDoc(doc(db, 'articulos', id));\n      return true;\n    } catch (error) {\n      console.error('Error deleting article:', error);\n      throw error;\n    }\n  },\n\n  // Buscar artículos\n  async searchArticles(searchTerm) {\n    try {\n      const q = query(collection(db, 'articulos'), orderBy('createdAt', 'desc'));\n      const querySnapshot = await getDocs(q);\n      \n      const articles = querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        uuid: doc.id,\n        ...doc.data()\n      }));\n\n      // Filtrar en el cliente\n      return articles.filter(article => \n        article.titulo?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        article.descripcion?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        article.tags?.some(tag => tag.toLowerCase().includes(searchTerm.toLowerCase()))\n      );\n    } catch (error) {\n      console.error('Error searching articles:', error);\n      throw error;\n    }\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}